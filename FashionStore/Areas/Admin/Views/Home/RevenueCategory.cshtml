
@{
    ViewData["Title"] = "RevenueCategory";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<div class="container-fluid bg-light mt-5 shadow w-auto rounded-3 pb-5">
    <div class="row">
        <div class="col-12">
            <div id="category" class="mt-5" style="height: 100vh;"></div>
        </div>
    </div>
</div>

<script>
    async function fetchData() {
        try {
            const response = await fetch('/api/RevenueCategoryAPI/order-count');
            const dataWrapper = await response.json();
            const data = dataWrapper.$values; // Truy cập vào thuộc tính $values
            console.log(data); // Log dữ liệu ra console

            if (Array.isArray(data)) {
                var chartDom = document.getElementById('category');
                var myChart = echarts.init(chartDom);
                var option;

                var totalOrders = data.reduce((total, item) => total + item.orderCount, 0);

                option = {
                    title: {
                        text: 'Số lượng đơn hàng theo danh mục',
                        subtext: 'Tổng đơn hàng: ' + totalOrders,
                        left: 'center'
                    },
                    tooltip: {
                        trigger: 'item',
                        formatter: '{a} <br/>{b}: {c} ({d}%)'
                    },
                    legend: {
                        orient: 'vertical',
                        left: 'left',
                        formatter: function (name) {
                            const item = data.find(i => i.categoryName + ' - ' + ((i.orderCount / totalOrders) * 100).toFixed(2) + '%' === name);
                            return item ? `${name} (${item.orderCount} sản phẩm)` : name;
                        }
                    },
                    series: [
                        {
                            name: 'Số lượng đơn hàng',
                            type: 'pie',
                            radius: '50%',
                            data: data.map(item => ({
                                value: item.orderCount,
                                name: item.categoryName + ' - ' + ((item.orderCount / totalOrders) * 100).toFixed(2) + '%'
                            })),
                            emphasis: {
                                itemStyle: {
                                    shadowBlur: 10,
                                    shadowOffsetX: 0,
                                    shadowColor: 'rgba(0, 0, 0, 0.5)'
                                }
                            }
                        }
                    ]
                };

                option && myChart.setOption(option);
            } else {
                console.error('Data is not an array.');
            }
        } catch (error) {
            console.error('Error fetching data:', error);
        }
    }

    fetchData();

</script>
